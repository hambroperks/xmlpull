//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/xmlpull/xmlpull/src/main/java/org/xmlpull/v1/XmlSerializer.java
//

#include "J2ObjC_source.h"
#include "org/xmlpull/v1/XmlSerializer.h"

@interface OrgXmlpullV1XmlSerializer : NSObject

@end

@implementation OrgXmlpullV1XmlSerializer

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "Z", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, 2, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 7, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 8, 9, 10, -1, -1, -1 },
    { NULL, "V", 0x401, 8, 11, 10, -1, -1, -1 },
    { NULL, "V", 0x401, 12, 13, 10, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 10, -1, -1, -1 },
    { NULL, "V", 0x401, 14, 15, 10, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 16, 1, 17, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x401, 18, 15, 10, -1, -1, -1 },
    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x401, 19, 20, 10, -1, -1, -1 },
    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x401, 21, 15, 10, -1, -1, -1 },
    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x401, 22, 4, 10, -1, -1, -1 },
    { NULL, "LOrgXmlpullV1XmlSerializer;", 0x401, 22, 23, 10, -1, -1, -1 },
    { NULL, "V", 0x401, 24, 4, 10, -1, -1, -1 },
    { NULL, "V", 0x401, 25, 4, 10, -1, -1, -1 },
    { NULL, "V", 0x401, 26, 4, 10, -1, -1, -1 },
    { NULL, "V", 0x401, 27, 4, 10, -1, -1, -1 },
    { NULL, "V", 0x401, 28, 4, 10, -1, -1, -1 },
    { NULL, "V", 0x401, 29, 4, 10, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 30, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setFeatureWithNSString:withBoolean:);
  methods[1].selector = @selector(getFeatureWithNSString:);
  methods[2].selector = @selector(setPropertyWithNSString:withId:);
  methods[3].selector = @selector(getPropertyWithNSString:);
  methods[4].selector = @selector(setOutputWithJavaIoOutputStream:withNSString:);
  methods[5].selector = @selector(setOutputWithJavaIoWriter:);
  methods[6].selector = @selector(startDocumentWithNSString:withJavaLangBoolean:);
  methods[7].selector = @selector(endDocument);
  methods[8].selector = @selector(setPrefixWithNSString:withNSString:);
  methods[9].selector = @selector(getPrefixWithNSString:withBoolean:);
  methods[10].selector = @selector(getDepth);
  methods[11].selector = @selector(getNamespace);
  methods[12].selector = @selector(getName);
  methods[13].selector = @selector(startTagWithNSString:withNSString:);
  methods[14].selector = @selector(attributeWithNSString:withNSString:withNSString:);
  methods[15].selector = @selector(endTagWithNSString:withNSString:);
  methods[16].selector = @selector(textWithNSString:);
  methods[17].selector = @selector(textWithCharArray:withInt:withInt:);
  methods[18].selector = @selector(cdsectWithNSString:);
  methods[19].selector = @selector(entityRefWithNSString:);
  methods[20].selector = @selector(processingInstructionWithNSString:);
  methods[21].selector = @selector(commentWithNSString:);
  methods[22].selector = @selector(docdeclWithNSString:);
  methods[23].selector = @selector(ignorableWhitespaceWithNSString:);
  methods[24].selector = @selector(flush);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setFeature", "LNSString;Z", "LJavaLangIllegalArgumentException;LJavaLangIllegalStateException;", "getFeature", "LNSString;", "setProperty", "LNSString;LNSObject;", "getProperty", "setOutput", "LJavaIoOutputStream;LNSString;", "LJavaIoIOException;LJavaLangIllegalArgumentException;LJavaLangIllegalStateException;", "LJavaIoWriter;", "startDocument", "LNSString;LJavaLangBoolean;", "setPrefix", "LNSString;LNSString;", "getPrefix", "LJavaLangIllegalArgumentException;", "startTag", "attribute", "LNSString;LNSString;LNSString;", "endTag", "text", "[CII", "cdsect", "entityRef", "processingInstruction", "comment", "docdecl", "ignorableWhitespace", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgXmlpullV1XmlSerializer = { "XmlSerializer", "org.xmlpull.v1", ptrTable, methods, NULL, 7, 0x609, 25, 0, -1, -1, -1, -1, -1 };
  return &_OrgXmlpullV1XmlSerializer;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgXmlpullV1XmlSerializer)
